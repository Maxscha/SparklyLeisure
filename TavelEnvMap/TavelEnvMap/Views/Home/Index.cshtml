@{
    ViewData["Title"] = "Home Page";
}

@section Scripts{
    <script src="~/js/TypeConverter.js"></script>
    <script>
        var heatMapData = [];
        var heatMap = null;
        var map;

        function setNewHeatMap() {
            var heatMap = new google.maps.visualization.HeatmapLayer({
                data: heatMapData
            });
            heatMap.set('radius', 100);
            heatMap.set('dissipating', false);
            heatMap.setMap(map);
        }

        function getIconFromEnvIssueType(type) {
            if (type == 0) {
                return '/images/icons/full-trash-container.png';
            }
            return null;

        }

        function loadEnvIssues(map) {
            var uri = 'api/map/trash';
            $.getJSON(uri)
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    console.log(data);
                    $.each(data, function (key, item) {
                        // Add a list item for the product.
                        var contentString = '<div id="content">' +
                            convertType(item.issue) +
                            '</div>';

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        var icon = getIconFromEnvIssueType(item.issue);
                        if (icon) {
                            var marker = new google.maps.Marker({
                                position: item.position,
                                map: map,
                                icon: icon
                            });

                        } else {
                            var marker = new google.maps.Marker({
                                position: item.position,
                                map: map
                            });
                        }

                        marker.addListener('click', function () {
                            infowindow.open(map, marker);
                        });
                        if (heatMap)
                            heatMap.setMap(null);
                        heatMapData.push(
                            { location: new google.maps.LatLng(item.position.lat, item.position.lng), weight: 0.5 }
                        );
                    });
                    setNewHeatMap();
                });
        }

        function loadAirStations(map) {
            var uri = 'api/map/AirQualityStations';
            $.getJSON(uri)
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    $.each(data, function (key, item) {
                        // Add a list item for the product.
                        var contentString = '<div id="content">' +
                            "Air Quality Index:" + item.airQualityIndex +
                            '</div>';

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        // Add a list item for the product.
                        var marker = new google.maps.Marker({
                            position: item.position,
                            map: map
                        });
                        marker.addListener('click', function () {
                            infowindow.open(map, marker);
                        });
                        if (heatMap)
                            heatMap.setMap(null);
                        heatMapData.push(
                            { location: new google.maps.LatLng(item.position.lat, item.position.lng), weight: item.airQualityIndex }
                        );
                    });
                    setNewHeatMap();
                });

        }

        function getInfoForLeissure(item) {
            if (item.toPolluted) {
                //Go somewhere else
                return "Its bad here Griebnitzsee is better go swimming there";
            }
            else {
                //Normal
                var contentString = '<div id="content">' +
                    item.name +
                    '</div>';
                return contentString;
            }

        }

        function loadLeissures(map) {
            var uri = 'api/map/Leissure';
            $.getJSON(uri)
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    $.each(data, function (key, item) {
                        console.log(item);
                        // Add a list item for the product.
                        var contentString = getInfoForLeissure(item);

                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        // Add a list item for the product.
                        var marker = new google.maps.Marker({
                            position: item.position,
                            map: map
                        });
                        marker.addListener('click', function () {
                            infowindow.open(map, marker);
                        });
                    });
                });

        }

        function getPoliticianAndShow(event) {
            var lat = event.latLng.lat();
            var lng = event.latLng.lng();
            var uri = 'api/map/Politician';
            $.getJSON(uri)
                .done(function (data) {
                    var contentString = '<div id="content">';
                    // On success, 'data' contains a list of products.
                    console.log(data);
                    $.each(data, function (key, item) {
                        contentString += "<span>" + item.name + "</span>";
                        contentString += '<a href="/complain">Complain</a>';
                    });

                    contentString += "</div>"
                    var infowindow = new google.maps.InfoWindow({
                        content: contentString
                    });
                    infowindow.setPosition({ lat: event.latLng.lat(), lng: event.latLng.lng() });
                    infowindow.open(map);
                });
            //alert("Lat=" + lat + "; Lng=" + lng);
        }

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 52.520008, lng: 13.404954 },
                zoom: 10
            });
            google.maps.event.addListener(map, "rightclick", function (event) {
                getPoliticianAndShow(event);
            });
            loadEnvIssues(map);
            loadAirStations(map);
            loadLeissures(map);
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var marker = new google.maps.Marker({
                    position: pos,
                    map: map,
                    title: "You are here Location",
                    //TODO ADD ICON

                });
            });

            //infoWindow.setPosition(pos);

        }
        $(
            function () {
                // initMap();
            });
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyALyjjO3YRS7fQOO7w-EIYcRqjl_fdI_yc&callback=initMap&libraries=visualization"
            async defer></script>
}

<div class="row">
    <div class="col-xs-12">
        <div id="map" style="height:833px; width:100%"></div>
    </div>
    <div class="recommendations">
        <p>Based on your location and the current enviroment we recommend following outdoor activites:</p>
        <div class="recommendation card">
            <img class="card-img-top" src="..." alt="Card image cap">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <a href="#" class="btn btn-primary">Go somewhere</a>
            </div>
        </div>
        <div class="recommendation"></div>

    </div>
</div>
